// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimplePhoneBook.Data.Data;

namespace SimplePhoneBook.Data.Migrations
{
    [DbContext(typeof(SimplePhoneBookDbContext))]
    [Migration("20210127204854_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("SimplePhoneBook.Data.Entites.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Base64EncodedImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .IsClustered(false);

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("SimplePhoneBook.Data.Entites.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PhoneNumberTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .IsClustered(false);

                    b.HasIndex("ContactId");

                    b.HasIndex("PhoneNumberTypeId")
                        .IsUnique()
                        .IsClustered(false);

                    b.ToTable("PhoneNumber");
                });

            modelBuilder.Entity("SimplePhoneBook.Data.Entites.PhoneNumberType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .IsClustered(false);

                    b.ToTable("PhoneNumberType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModifiedDate = new DateTime(2021, 1, 27, 22, 48, 54, 259, DateTimeKind.Local).AddTicks(2972),
                            Name = "Mobile"
                        },
                        new
                        {
                            Id = 2,
                            ModifiedDate = new DateTime(2021, 1, 27, 22, 48, 54, 260, DateTimeKind.Local).AddTicks(4679),
                            Name = "Home"
                        },
                        new
                        {
                            Id = 3,
                            ModifiedDate = new DateTime(2021, 1, 27, 22, 48, 54, 260, DateTimeKind.Local).AddTicks(4700),
                            Name = "Work"
                        },
                        new
                        {
                            Id = 4,
                            ModifiedDate = new DateTime(2021, 1, 27, 22, 48, 54, 260, DateTimeKind.Local).AddTicks(4702),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("SimplePhoneBook.Data.Entites.PhoneNumber", b =>
                {
                    b.HasOne("SimplePhoneBook.Data.Entites.Contact", null)
                        .WithMany("PhoneNumber")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimplePhoneBook.Data.Entites.PhoneNumberType", "PhoneNumberType")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("PhoneNumberTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhoneNumberType");
                });

            modelBuilder.Entity("SimplePhoneBook.Data.Entites.Contact", b =>
                {
                    b.Navigation("PhoneNumber");
                });

            modelBuilder.Entity("SimplePhoneBook.Data.Entites.PhoneNumberType", b =>
                {
                    b.Navigation("PhoneNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
